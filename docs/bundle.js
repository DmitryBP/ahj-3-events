(()=>{"use strict";function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function e(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function r(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var n=new(e((function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),r(this,"start",(function(){if(0===n.flag){n.flag=1;for(var t=[0],e=1;e<100;e+=1){var r=Math.floor(15*Math.random());t.push(r),t[e-1]===t[e]&&(t[e]+=1)}var a=1;n.interval=setInterval((function(){n.el[t[a]].classList.add("target"),n.el[t[a-1]].classList.remove("target"),a<t.length-1?a+=1:(console.log("the end"),clearInterval(n.interval))}),1e3)}})),r(this,"stop",(function(){n.flag=0,clearInterval(n.interval),n.el.forEach((function(t){t.classList.remove("target")}))})),e=Array.from(document.querySelectorAll(e)),this.el=e,this.btn1=document.querySelector(".btn1"),this.btn2=document.querySelector(".btn2"),this.btn1.addEventListener("click",this.start),this.btn2.addEventListener("click",this.stop),this.interval=this.start,this.flag=0})))(".item"),a=document.getElementsByClassName("heart"),i=document.querySelectorAll(".item"),o=0,l=2,s=document.getElementsByClassName("score");i.forEach((function(t){t.addEventListener("click",(function(t){t.target.className.includes("target")?(o+=1,s[0].innerHTML="Очки: ".concat(o)):(a[l].classList.add("heartBreak"),l>0?l-=1:(n.stop(),l=2,o=0,s[0].innerHTML="Очки: ".concat(o),(a=Array.from(a)).forEach((function(t){t.classList.remove("heartBreak")}))))}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI2WkFHa0IsSUNFWkEsRUFBZ0IsSURBWSxHQUNoQyxXQUFZQyxHQUFJLFksNEZBQUEseUJBWVIsV0FDTixHQUFrQixJQUFkLEVBQUtDLEtBQVksQ0FDbkIsRUFBS0EsS0FBTyxFQUVaLElBREEsSUFBTUMsRUFBTSxDQUFDLEdBQ0pDLEVBQUksRUFBR0EsRUFBSSxJQUFLQSxHQUFLLEVBQUcsQ0FDL0IsSUFBTUMsRUFBVUMsS0FBS0MsTUFBc0IsR0FBaEJELEtBQUtFLFVBQ2hDTCxFQUFJTSxLQUFLSixHQUNMRixFQUFJQyxFQUFJLEtBQU9ELEVBQUlDLEtBQ3JCRCxFQUFJQyxJQUFNLEVBRWQsQ0FDQSxJQUFJTSxFQUFJLEVBQ1IsRUFBS0MsU0FBV0MsYUFBWSxXQUMxQixFQUFLWCxHQUFHRSxFQUFJTyxJQUFJRyxVQUFVQyxJQUFJLFVBQzlCLEVBQUtiLEdBQUdFLEVBQUlPLEVBQUksSUFBSUcsVUFBVUUsT0FBTyxVQUVqQ0wsRUFBSVAsRUFBSWEsT0FBUyxFQUNuQk4sR0FBSyxHQUVMTyxRQUFRQyxJQUFJLFdBQ1pDLGNBQWMsRUFBS1IsVUFFdkIsR0FBRyxJQUNMLENBQ0YsSUFBQyxlQUVNLFdBQ0wsRUFBS1QsS0FBTyxFQUNaaUIsY0FBYyxFQUFLUixVQUNuQixFQUFLVixHQUFHbUIsU0FBUSxTQUFDQyxHQUNmQSxFQUFRUixVQUFVRSxPQUFPLFNBQzNCLEdBQ0YsSUExQ0VkLEVBQUtxQixNQUFNQyxLQUFLQyxTQUFTQyxpQkFBaUJ4QixJQUMxQ3lCLEtBQUt6QixHQUFLQSxFQUNWeUIsS0FBS0MsS0FBT0gsU0FBU0ksY0FBYyxTQUNuQ0YsS0FBS0csS0FBT0wsU0FBU0ksY0FBYyxTQUNuQ0YsS0FBS0MsS0FBS0csaUJBQWlCLFFBQVNKLEtBQUtLLE9BQ3pDTCxLQUFLRyxLQUFLQyxpQkFBaUIsUUFBU0osS0FBS00sTUFDekNOLEtBQUtmLFNBQVdlLEtBQUtLLE1BQ3JCTCxLQUFLeEIsS0FBTyxDQUNkLElDWG9CLENBQWtCLFNBRXBDK0IsRUFBWVQsU0FBU1UsdUJBQXVCLFNBQzFDQyxFQUFRWCxTQUFTQyxpQkFBaUIsU0FFcENXLEVBQWUsRUFDZkMsRUFBYyxFQUVaQyxFQUFRZCxTQUFTVSx1QkFBdUIsU0FDOUNDLEVBQU1mLFNBQVEsU0FBQ21CLEdBQ2JBLEVBQUtULGlCQUFpQixTQUFTLFNBQUNVLEdBQ1hBLEVBQVhDLE9BQ0dDLFVBQVVDLFNBQVMsV0FDNUJQLEdBQWdCLEVBQ2hCRSxFQUFNLEdBQUdNLFVBQVksU0FBSCxPQUFZUixLQUU5QkgsRUFBVUksR0FBYXhCLFVBQVVDLElBQUksY0FDakN1QixFQUFjLEVBQ2hCQSxHQUFlLEdBRWZyQyxFQUFjZ0MsT0FDZEssRUFBYyxFQUNkRCxFQUFlLEVBQ2ZFLEVBQU0sR0FBR00sVUFBWSxTQUFILE9BQVlSLElBQzlCSCxFQUFZWCxNQUFNQyxLQUFLVSxJQUNiYixTQUFRLFNBQUNDLEdBQ2pCQSxFQUFRUixVQUFVRSxPQUFPLGFBQzNCLEtBR04sR0FDRixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2VicGFjazUtdGVtcGxhdGUvLi9zcmMvY29tcG9uZW50cy9yYW5kb21Nb292aW5nL1JhbmRvbU1vb3YuanMiLCJ3ZWJwYWNrOi8vd2VicGFjazUtdGVtcGxhdGUvLi9zcmMvanMvYXBwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG4vKiBnbG9iYWwgZG9jdW1lbnQgKi9cblxuaW1wb3J0ICcuL3JtLmNzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJhbmRvbU1vb3Zpbmcge1xuICBjb25zdHJ1Y3RvcihlbCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIGVsID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGVsKSk7XG4gICAgdGhpcy5lbCA9IGVsO1xuICAgIHRoaXMuYnRuMSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idG4xJyk7XG4gICAgdGhpcy5idG4yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ0bjInKTtcbiAgICB0aGlzLmJ0bjEuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLnN0YXJ0KTtcbiAgICB0aGlzLmJ0bjIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLnN0b3ApO1xuICAgIHRoaXMuaW50ZXJ2YWwgPSB0aGlzLnN0YXJ0O1xuICAgIHRoaXMuZmxhZyA9IDA7XG4gIH1cblxuICBzdGFydCA9ICgpID0+IHtcbiAgICBpZiAodGhpcy5mbGFnID09PSAwKSB7XG4gICAgICB0aGlzLmZsYWcgPSAxO1xuICAgICAgY29uc3QgYXJyID0gWzBdO1xuICAgICAgZm9yIChsZXQgaiA9IDE7IGogPCAxMDA7IGogKz0gMSkge1xuICAgICAgICBjb25zdCByYW5kb29tID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTUpO1xuICAgICAgICBhcnIucHVzaChyYW5kb29tKTtcbiAgICAgICAgaWYgKGFycltqIC0gMV0gPT09IGFycltqXSkge1xuICAgICAgICAgIGFycltqXSArPSAxO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsZXQgaSA9IDE7XG4gICAgICB0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICB0aGlzLmVsW2FycltpXV0uY2xhc3NMaXN0LmFkZCgndGFyZ2V0Jyk7XG4gICAgICAgIHRoaXMuZWxbYXJyW2kgLSAxXV0uY2xhc3NMaXN0LnJlbW92ZSgndGFyZ2V0Jyk7XG5cbiAgICAgICAgaWYgKGkgPCBhcnIubGVuZ3RoIC0gMSkge1xuICAgICAgICAgIGkgKz0gMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygndGhlIGVuZCcpO1xuICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCk7XG4gICAgICAgIH1cbiAgICAgIH0sIDEwMDApO1xuICAgIH1cbiAgfTtcblxuICBzdG9wID0gKCkgPT4ge1xuICAgIHRoaXMuZmxhZyA9IDA7XG4gICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTtcbiAgICB0aGlzLmVsLmZvckVhY2goKGVsZW1lbnQpID0+IHtcbiAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgndGFyZ2V0Jyk7XG4gICAgfSk7XG4gIH07XG59XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1uYW1lZC1hcy1kZWZhdWx0XG5pbXBvcnQgUmFuZG9tTW9vdmluZyBmcm9tICcuLi9jb21wb25lbnRzL3JhbmRvbU1vb3ZpbmcvUmFuZG9tTW9vdic7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFycywgbm8tdW5kZWYsIGltcG9ydC9wcmVmZXItZGVmYXVsdC1leHBvcnRcbmNvbnN0IHJhbmRvbU1vdmVpbmcgPSBuZXcgUmFuZG9tTW9vdmluZygnLml0ZW0nKTtcblxubGV0IGhlYXJ0SWNvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2hlYXJ0Jyk7XG5jb25zdCBpdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5pdGVtJyk7XG5cbmxldCBzY29yZUNvdW50ZXIgPSAwO1xubGV0IGhlYXJ0TnVtYmVyID0gMjtcblxuY29uc3Qgc2NvcmUgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdzY29yZScpO1xuaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICBjb25zdCB7IHRhcmdldCB9ID0gZTtcbiAgICBpZiAodGFyZ2V0LmNsYXNzTmFtZS5pbmNsdWRlcygndGFyZ2V0JykpIHtcbiAgICAgIHNjb3JlQ291bnRlciArPSAxO1xuICAgICAgc2NvcmVbMF0uaW5uZXJIVE1MID0gYNCe0YfQutC4OiAke3Njb3JlQ291bnRlcn1gO1xuICAgIH0gZWxzZSB7XG4gICAgICBoZWFydEljb25baGVhcnROdW1iZXJdLmNsYXNzTGlzdC5hZGQoJ2hlYXJ0QnJlYWsnKTtcbiAgICAgIGlmIChoZWFydE51bWJlciA+IDApIHtcbiAgICAgICAgaGVhcnROdW1iZXIgLT0gMTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJhbmRvbU1vdmVpbmcuc3RvcCgpO1xuICAgICAgICBoZWFydE51bWJlciA9IDI7XG4gICAgICAgIHNjb3JlQ291bnRlciA9IDA7XG4gICAgICAgIHNjb3JlWzBdLmlubmVySFRNTCA9IGDQntGH0LrQuDogJHtzY29yZUNvdW50ZXJ9YDtcbiAgICAgICAgaGVhcnRJY29uID0gQXJyYXkuZnJvbShoZWFydEljb24pO1xuICAgICAgICBoZWFydEljb24uZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnaGVhcnRCcmVhaycpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufSk7XG4iXSwibmFtZXMiOlsicmFuZG9tTW92ZWluZyIsImVsIiwiZmxhZyIsImFyciIsImoiLCJyYW5kb29tIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwicHVzaCIsImkiLCJpbnRlcnZhbCIsInNldEludGVydmFsIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwibGVuZ3RoIiwiY29uc29sZSIsImxvZyIsImNsZWFySW50ZXJ2YWwiLCJmb3JFYWNoIiwiZWxlbWVudCIsIkFycmF5IiwiZnJvbSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsInRoaXMiLCJidG4xIiwicXVlcnlTZWxlY3RvciIsImJ0bjIiLCJhZGRFdmVudExpc3RlbmVyIiwic3RhcnQiLCJzdG9wIiwiaGVhcnRJY29uIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsIml0ZW1zIiwic2NvcmVDb3VudGVyIiwiaGVhcnROdW1iZXIiLCJzY29yZSIsIml0ZW0iLCJlIiwidGFyZ2V0IiwiY2xhc3NOYW1lIiwiaW5jbHVkZXMiLCJpbm5lckhUTUwiXSwic291cmNlUm9vdCI6IiJ9